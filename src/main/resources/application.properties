# ==============================================================
# = Thymeleaf / Configuration
# ==============================================================
spring.thymeleaf.mode=HTML
spring.thymeleaf.cache=false
server.port=8080

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update

# ==============================================================
# = Spring Data / Configuration - Mysql
# ==============================================================
#spring.datasource.url=jdbc:mysql://localhost/springteste
#spring.datasource.username=root
#spring.datasource.password=123456

# ==============================================================
# = Spring Data / Configuration - PostgreSQL HEROKU
# ==============================================================
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

# ==============================================================
# = Spring Data / Configuration - PostgreSQL
# ==============================================================
#spring.datasource.url=jdbc:postgresql://localhost:5432/springteste?createDatabaseIfNotExist=true&useSSL=false
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.username=root
#spring.datasource.password=123456
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect


# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
#spring.queries.users-query=select email, password, active from user where active = 1 and email=?
#spring.queries.roles-query=select user.email, role.name from user inner join role on (role.id = user.role_id) where user.email=?

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder - POSTGRES
# ==============================================================
spring.queries.users-query=SELECT email, password, active FROM public.user AS use WHERE active = '1' AND email=?
spring.queries.roles-query=SELECT email, role.name FROM public.user INNER JOIN public.role AS role ON role.id = role_id WHERE email=?



